description = 'Web-Service'

buildscript {
    repositories {
        mavenCentral()
        maven { url 'http://repo.spring.io/release' }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.1.1.RELEASE")
    }
}

apply plugin: 'spring-boot'
apply plugin: 'application'

jar {
    baseName = group
    version =  version
}

repositories {
    maven { url 'http://repo.spring.io/snapshot' }
}

dependencies {
    // make it groovy
    compile group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.3.+'

    // spring mvc for architecture
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    compile group: 'org.springframework', name: 'spring-context-support'
    compile group: 'org.springframework', name: 'spring-orm'

    // solr specific stuff
    compile group: 'org.springframework.data', name: 'spring-data-solr', version: '1.2.+'
    compile ('org.apache.solr:solr-core:4.0.+') { exclude group: 'org.slf4j' }

    // spring security
    compile group: 'org.springframework.security', name: 'spring-security-config', version: '3.2.+'
    compile group: 'org.springframework.security', name: 'spring-security-web', version: '3.2.+'

    // hibernate for persistence and validation
    compile group: 'org.hibernate', name: 'hibernate-core', version: '4.3.+'
    compile group: 'org.hibernate', name: 'hibernate-validator', version: '5.1.+'

    // quartz job framework
    compile group: 'org.quartz-scheduler', name: 'quartz', version: '2.2.+'
    compile group: 'org.quartz-scheduler', name: 'quartz-jobs', version: '2.2.+'

    // object mapping
    compile group: 'net.sf.dozer', name: 'dozer', version: '5.5.+'
    compile group: 'net.sf.dozer', name: 'dozer-spring', version: '5.5.+'

    // json entity mapping for rest service
    runtime group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.1.+'
    runtime group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.1.+'

    // mysql database
    runtime group: 'mysql', name: 'mysql-connector-java', version: '5.1.+'
}

task dataPropertiesExistence() {
    def dataPropertiesFile = new File('src/main/resources/data.properties')

    if (!dataPropertiesFile.isFile()) {
        throw new InvalidUserDataException('data.properties is missing, please consult README.md')
    }
}

build.dependsOn dataPropertiesExistence