<!--
 For information, on how to customize this file, please see
 http://wiki.apache.org/solr/SchemaXml

 PERFORMANCE NOTE: this schema includes many optional features and should not
 be used for benchmarking.  To improve performance one could
  - set stored="false" for all fields possible (esp large fields) when you
    only need to search on the field but don't need to return the original
    value.
  - set indexed="false" if you don't need to search on the field, but only
    return the field as a result of searching on other indexed fields.
  - remove all unneeded copyField statements
  - for best index size and searching performance, set "index" to false
    for all general text fields, use copyField to copy them to the
    catchall "text" field, and use that for searching.
  - For maximum indexing performance, use the StreamingUpdateSolrServer
    java client.
  - Remember to run the JVM in server mode, and use a higher logging level
    that avoids logging every request
-->
<schema name="collection1" version="1.1">
	<types>
		<fieldtype name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true" />
		<fieldType name="int" class="solr.TrieIntField" positionIncrementGap="0" />
		<fieldType name="float" class="solr.TrieFloatField" precisionStep="0" positionIncrementGap="0" />
		<fieldType name="long" class="solr.TrieLongField" positionIncrementGap="0" />
		<fieldType name="double" class="solr.TrieDoubleField" precisionStep="0" positionIncrementGap="0" />

		<fieldType name="string_ci" class="solr.TextField" positionIncrementGap="100">
			<analyzer>
				<!-- KeywordTokenizer take the text as is - does not perform any splitting -->
				<!-- http://wiki.apache.org/solr/AnalyzersTokenizersTokenFilters -->
				<tokenizer class="solr.KeywordTokenizerFactory" />
				<filter class="solr.LowerCaseFilterFactory" />
			</analyzer>
		</fieldType>

		<fieldType name="text_general" class="solr.TextField"
			positionIncrementGap="100">
			<analyzer type="index">
				<tokenizer class="solr.StandardTokenizerFactory" />
				<filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
				<filter class="solr.LowerCaseFilterFactory" />
			</analyzer>
			<analyzer type="query">
				<tokenizer class="solr.StandardTokenizerFactory" />
				<filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
				<filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true" />
				<filter class="solr.LowerCaseFilterFactory" />
			</analyzer>
		</fieldType>

		<!-- http://wiki.apache.org/solr/SpellCheckingAnalysis -->
		<fieldType name="text_spell" class="solr.TextField"
			positionIncrementGap="100" stored="false" multiValued="true">
			<analyzer type="index">
				<tokenizer class="solr.StandardTokenizerFactory" />
				<filter class="solr.LowerCaseFilterFactory" />
				<filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true" />
				<filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" />
				<filter class="solr.StandardFilterFactory" />
				<filter class="solr.RemoveDuplicatesTokenFilterFactory" />
			</analyzer>
			<analyzer type="query">
				<tokenizer class="solr.StandardTokenizerFactory" />
				<filter class="solr.LowerCaseFilterFactory" />
				<filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" />
				<filter class="solr.StandardFilterFactory" />
				<filter class="solr.RemoveDuplicatesTokenFilterFactory" />
			</analyzer>
		</fieldType>

		<fieldType name="text_suggest" class="solr.TextField"
			positionIncrementGap="100" stored="false" multiValued="true">
			<analyzer type="index">
				<tokenizer class="solr.StandardTokenizerFactory" />
				<filter class="solr.LowerCaseFilterFactory" />
				<filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true" />
				<filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" />
				<filter class="solr.StandardFilterFactory" />
				<filter class="solr.RemoveDuplicatesTokenFilterFactory" />
			</analyzer>
			<analyzer type="query">
				<tokenizer class="solr.StandardTokenizerFactory" />
				<filter class="solr.LowerCaseFilterFactory" />
				<filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" />
				<filter class="solr.StandardFilterFactory" />
				<filter class="solr.RemoveDuplicatesTokenFilterFactory" />
			</analyzer>
		</fieldType>
	</types>

	<fields>
		<field name="id" type="string" indexed="true" stored="true" required="true" />
		<field name="name" type="text_general" indexed="true" stored="true" required="false" />
		<!-- TODO do we really need to store the synonyms? maybe for suggestion/spellchecking? -->
		<field name="synonyms" type="text_general" indexed="true" stored="true" multiValued="true" required="false" />
		<field name="type" type="string" indexed="true" stored="true" required="false" />
		<field name="sourceId" type="string_ci" indexed="true" stored="true" required="false" />
		<field name="comprotId" type="long" indexed="false" stored="true" required="false" />
		<field name="taxonomyId" type="int" indexed="true" stored="true" required="false" />
		<field name="usage_count" type="long" indexed="true" stored="true" required="false"/>
		<field name="usage_timestamp" type="long" indexed="true" stored="true" required="false" />

		<!-- 
			automatically populate this field from the name and synonyms field 
			NOTE: we add add more copyField-tags to copy other fields content also into 
			name_spell ! 
		-->
		<field name="term_spell" type="text_spell" />
		<copyField source="name" dest="term_spell" />
		<copyField source="synonyms" dest="term_spell" />
		<copyField source="sourceId" dest="term_spell" />

		<!-- here we collect terms to be used for suggestions -->
		<field name="term_suggest" type="text_suggest" />
		<copyField source="name" dest="term_suggest" />
		<copyField source="synonyms" dest="term_suggest" />
		<copyField source="sourceId" dest="term_suggest" />

	</fields>

	<!-- field to be used to determine a document as unique -->
	<uniqueKey>id</uniqueKey>
</schema>

